;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;; 这个效率也很低吧。。。 还是要生成的时候讲究点。
(define (queens-8)
  (let ((line1 (amb 1 2 3 4 5 6 7 8))
        (line2 (amb 1 2 3 4 5 6 7 8))
        (line3 (amb 1 2 3 4 5 6 7 8))
        (line4 (amb 1 2 3 4 5 6 7 8))
        (line5 (amb 1 2 3 4 5 6 7 8))
        (line6 (amb 1 2 3 4 5 6 7 8))
        (line7 (amb 1 2 3 4 5 6 7 8))
        (line8 (amb 1 2 3 4 5 6 7 8)))
    (require (distinct? line1 line2 line3 line4 line5 line6 line7 line8))
    (require (safe? (list line1 line2 line3 line4 line5 line6 line7 line8)))
    (list (list 'line1 line1)
          (list 'line2 line2)
          (list 'line3 line3)
          (list 'line4 line3)
          (list 'line5 line3)
          (list 'line6 line3)
          (list 'line7 line3)
          (list 'line8 line3))))


(define (safe? list)
  (define (safe-pair i j k)
    (cond ((and (= i k) (= j k)) #t)
          ((and (< i k) (= j k) (safe-pair (+ i 1) 0 k)))
          ((= i j) (safe-pair i (+ i j) k))
          ((and (< i k) (< j k))
           (let ((first (list-ref list i))
                 (second (list-ref list j)))
             (if (= (abs (- i j)) (abs (- first second)))
                 #f
                 (safe-pair i (+ 1 j) k))))))
  (safe-pair 0 0 8))
